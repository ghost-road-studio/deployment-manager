name: deployment-manager credentials integration
on:
  pull_request:
    branches:
    - main
    - dev
env:
  TEMPLATE_PATH: tests/deployments/bucket/bucket.jinja
jobs:
  gcloud:
    name: using setup-gcloud
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    steps:
    - id: deployment
      run: echo ::set-output name=deployment::gcloud-$GITHUB_SHA
    - uses: actions/checkout@v2
    - uses: actions/setup-node@master
      with:
        node-version: 16.x
    - run: |-
        npm clean-install
        npm run-script build
    
    - uses: google-github-actions/auth@v0
      with:
        create_credentials_file: true
        credentials_json: ${{ secrets.DEPLOYMENTS_SA_KEY_B64 }}
    - uses: google-github-actions/setup-gcloud@v0
    
    - id: deploy
      uses: ./
      with:
        deployment: ${{ steps.deployment.outputs.deployment }}
        template: ${{ env.TEMPLATE_PATH }}
        properties: name:${{ steps.deployment.outputs.deployment }}
    
    - name: Integration Tests
      run: npm run-script e2e-tests
      env:
        DEPLOYMENT: ${{ steps.deployment.outputs.deployment }}

  b64_json:
    name: using base64 credentials
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    steps:
    - id: deployment
      run: echo ::set-output name=deployment::b64-$GITHUB_SHA
    - uses: actions/checkout@v2
    - uses: actions/setup-node@master
      with:
        node-version: 16.x
    - run: |-
        npm clean-install
        npm run-script build
    
    - uses: google-github-actions/setup-gcloud@v0
    - id: deploy
      uses: ./
      with:
        credentials: ${{ secrets.DEPLOYMENTS_SA_KEY_B64 }}
        deployment: ${{ steps.deployment.outputs.deployment }}
        template: ${{ env.TEMPLATE_PATH }}
        properties: name:${{ steps.deployment.outputs.deployment }}
    
    - name: Integration Tests
      run: npm run-script e2e-tests
      env:
        DEPLOYMENT: ${{ steps.deployment.outputs.deployment }}

  json:
    name: using json credentials
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    steps:
    - id: deployment
      run: echo ::set-output name=deployment::json-$GITHUB_SHA
    - uses: actions/checkout@v2
    - uses: actions/setup-node@master
      with:
        node-version: 16.x
    - run: |-
        npm clean-install
        npm run-script build
    
    - uses: google-github-actions/setup-gcloud@v0
    - id: deploy
      uses: ./
      with:
        credentials: ${{ secrets.DEPLOYMENTS_SA_KEY_JSON }}
        deployment: ${{ steps.deployment.outputs.deployment }}
        template: ${{ env.TEMPLATE_PATH }}
        properties: name:${{ steps.deployment.outputs.deployment }}
    
    - name: Integration Tests
      run: npm run-script e2e-tests
      env:
        DEPLOYMENT: ${{ steps.deployment.outputs.deployment }}
    
  cleanup:
    name: clean up
    if: ${{ (github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]') && always() }}
    runs-on: ubuntu-latest
    needs: [ gcloud, b64_json, json ]
    steps:
    - uses: google-github-actions/auth@v0
      with:
        create_credentials_file: true
        credentials_json: ${{ secrets.DEPLOYMENTS_SA_KEY_B64 }}
    
    - uses: google-github-actions/setup-gcloud@v0
    - name: delete deployments
      run: |-
        gcloud deployment-manager deployments delete gcloud-$GITHUB_SHA --quiet
        gcloud deployment-manager deployments delete b64-$GITHUB_SHA --quiet
        gcloud deployment-manager deployments delete json-$GITHUB_SHA --quiet
